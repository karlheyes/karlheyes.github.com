--- src/id3.c	2014-08-17 21:07:29.838452562 +0100
+++ src.new/id3.c	2014-08-17 21:14:30.576142138 +0100
@@ -231,14 +231,15 @@
 
 	/* ices_log_debug("ID3v2: Frame type [%s] found, %d bytes", hdr, len); */
 	if (!strcmp(hdr, ID3V2_ARTIST_TAG(tag)) || !strcmp(hdr, ID3V2_TITLE_TAG(tag))) {
-		if (!(buf = malloc(len + 1))) {
+        char *b;
+		if (!(b = buf = malloc(len + 1))) {
 			ices_log("Error allocating memory while reading ID3v2 frame");
 
 			return -1;
 		}
 		len2 = len;
 		while (len2) {
-			if ((rlen = source->read(source, buf, len)) < 0) {
+			if ((rlen = source->read(source, b, len2)) <= 0) {
 				ices_log("Error reading ID3v2 frame data");
 				free(buf);
 
@@ -246,6 +247,7 @@
 			}
 			tag->pos += rlen;
 			len2 -= rlen;
+            b += rlen;
 		}
 
 		/* do basic unicode->ascii conversion */
--- src/mp3.c	2014-08-17 21:07:29.869452392 +0100
+++ src.new/mp3.c	2014-08-17 21:07:29.677453446 +0100
@@ -26,7 +26,7 @@
 
 #define MPG_MD_MONO 3
 
-#define MP3_BUFFER_SIZE 4096
+#define MP3_BUFFER_SIZE 1500
 
 typedef struct {
 	unsigned int version;
@@ -272,7 +272,8 @@
 			rlen = read(self->fd, buf, len);
 	}
 
-	self->bytes_read += rlen;
+        if (rlen > 0)
+            self->bytes_read += rlen;
 
 	return rlen;
 }
--- src/signals.c	2014-08-17 21:07:29.810452716 +0100
+++ src.new/signals.c	2014-08-17 21:07:29.606453836 +0100
@@ -81,7 +81,7 @@
 static RETSIGTYPE signals_child(const int sig) {
 	int stat;
 
-	wait(&stat);
+	while (waitpid (-1, &stat, 0) > 0);
 }
 
 /* SIGINT, ok, let's be nice and just drop dead */
--- src/stream.c	2014-08-17 21:07:29.887452293 +0100
+++ src.new/stream.c	2014-08-17 21:07:29.678453441 +0100
@@ -294,7 +294,7 @@
 				}
 			}
 		}
-		ices_cue_update(source);
+		//ices_cue_update(source);
 		if ( source->interrupttime && time(NULL)>=source->interrupttime ) finish_send = 1;
 	}
 
